openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
  /user:
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      tags:
        - User
    get:
      operationId: UserController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - User
  /user/{id}:
    get:
      operationId: UserController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - User
    put:
      operationId: UserController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordDto'
      responses:
        '200':
          description: ''
      tags:
        - User
    delete:
      operationId: UserController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - User
  /track:
    post:
      operationId: TrackController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: ''
      tags:
        - Track
    get:
      operationId: TrackController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Track
  /track/{id}:
    get:
      operationId: TrackController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Track
    put:
      operationId: TrackController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: ''
      tags:
        - Track
    delete:
      operationId: TrackController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Track
  /artist:
    post:
      operationId: ArtistController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: ''
      tags:
        - Artist
    get:
      operationId: ArtistController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Artist
  /artist/{id}:
    get:
      operationId: ArtistController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Artist
    put:
      operationId: ArtistController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: ''
      tags:
        - Artist
    delete:
      operationId: ArtistController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Artist
  /album:
    post:
      operationId: AlbumController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: ''
      tags:
        - Album
    get:
      operationId: AlbumController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Album
  /album/{id}:
    get:
      operationId: AlbumController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Album
    put:
      operationId: AlbumController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: ''
      tags:
        - Album
    delete:
      operationId: AlbumController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Album
  /favs:
    get:
      operationId: FavoritesController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Favorites
  /favs/track/{id}:
    post:
      operationId: FavoritesController_addTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_removeTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favorites
  /favs/album/{id}:
    post:
      operationId: FavoritesController_addAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_removeAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favorites
  /favs/artist/{id}:
    post:
      operationId: FavoritesController_addArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_removeArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favorites
info:
  title: Home Library Service
  description: Home music library service
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          description: login
          example: Evgeny
        password:
          type: string
          description: password
          example: myPassword
      required:
        - login
        - password
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
          description: old password
          example: oldPassword
        newPassword:
          type: string
          description: new password
          example: newPassword
      required:
        - oldPassword
        - newPassword
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: track name
          example: Jal net ruja
        artistId:
          type: string
          description: artist id
          example: 0a35dd62-e09f-444b-a628-f4e7c6954f57
        albumId:
          type: string
          description: albumId id
          example: 0a35dd62-e09f-444b-a628-f4e7c6954f57
        duration:
          type: number
          description: track duration
          example: 60
      required:
        - name
        - artistId
        - albumId
        - duration
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: track name
          example: Jal net ruja
        artistId:
          type: string
          description: artist id
          example: 0a35dd62-e09f-444b-a628-f4e7c6954f57
        albumId:
          type: string
          description: albumId id
          example: 0a35dd62-e09f-444b-a628-f4e7c6954f57
        duration:
          type: number
          description: track duration
          example: 60
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: artist name
          example: Vasiliy Pupkin
        grammy:
          type: boolean
          description: If artist has a grammy
          example: false
      required:
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: artist name
          example: Vasiliy Pupkin
        grammy:
          type: boolean
          description: If artist has a grammy
          example: false
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: album name
          example: Korol i shut
        year:
          type: number
          description: release year
          example: 1996
        artistId:
          type: string
          description: artist id
          example: 0a35dd62-e09f-444b-a628-f4e7c6954f57
      required:
        - name
        - year
        - artistId
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: album name
          example: Korol i shut
        year:
          type: number
          description: release year
          example: 1996
        artistId:
          type: string
          description: artist id
          example: 0a35dd62-e09f-444b-a628-f4e7c6954f57